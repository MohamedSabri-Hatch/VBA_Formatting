# üîç v0 Functionality Summary
# This version introduces foundational logic for intelligent variable and state extraction from spreadsheet-like cell data. The key features include:

# ‚úÖ Core Features
# Merged Area Detection: Automatically identifies the starting cell of a merged area containing the keyword "action".
# Header Name Identification: Extracts header names from cells, marking them as valid when they are not empty or reserved terms like "result".
# Line-by-Line Parsing: Each cell's content is processed line by line to extract all potential variable names and states.
# Finds concensus of names and states based on user input.
#
# üß† Extraction Logic
# The system uses a combination of rules and heuristics to identify variable names and states:
#   Hyphen-based parsing (e.g., Name - State)
#   Slash-separated state indicators (e.g., ON/OFF)
#   Keyword matching for known states (e.g., True, False, Lit, Occupied)
#   Transition word detection (e.g., goes, stays, moves)
#   Header-based inference: Uses header names to support state identification
#   Verification logic: Tracks and confirms extracted names and states when multiple candidates are found
# 
# ‚ö†Ô∏è Known Limitations
# Header-based name extraction is not yet implemented
# Manual input prompts are currently disabled for streamlined automation

üîß Functional Improvements from v0 - v1.0
  User Prompts:
    Now use 1-based indexing (e.g., options start at 1 instead of 0).
    Prompts are clearer and more user-friendly.

  Header Handling:
    Uses a headerCell object to track header names and flags.
    More robust than the simple Boolean flag used in the base version.

  Variable & State Tracking:
    Tracks variables by column letter when headers are present.
    Better handling of state changes and formatting.

  State Comparison Logic:
    Improved logic to avoid bolding empty or unchanged states.
    More structured and maintainable.

üß± Organizational Enhancements from v0 - v1.0
  Modular Design:
    Functions are more clearly separated and reusable.

  Cleaner Code:
    Redundant or unclear logic has been refactored.

  Better Comments:
    Inline comments are more descriptive and guide future development.

    v1.0 --> v1.1
      priority queue for state and name extraction replaces get consensus with dialogue box code.

üß† Functional Core Logic Updates between versions 1.1 -> 2.0
      # No Updates

üß¨ Extraction Logic
      # Removed Slash-separated states (e.g., ON/OFF)
      # Uses a dictionary (variableMap) to store AND COMPARE PREVIOUS STATES (removed existing state var).
      # New create object function allows pass by value to dictionaries

‚ö†Ô∏è Known Limitations
      # Bracket logic bolding is excluded and planned for next release.
      # Code in/out bolding is planned for next release.
